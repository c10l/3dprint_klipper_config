[heater_bed]
heater_pin: P2.5
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.23
# control: watermark
min_temp: 0
max_temp: 130
max_power: 0.5 # For running the 12v bed over 24v

[fan]
pin: P2.3
kick_start_time: 0.500
hardware_pwm: False
max_power: 0.525
cycle_time: 0.0123

[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
step_distance: 0.001666667
nozzle_diameter: 1.0
filament_diameter: 1.75
max_extrude_only_distance: 100
heater_pin: P2.7
sensor_type: PT1000
sensor_pin: P0.24
min_temp: 0
max_temp: 285
max_power: 0.5 # For running the 12v heater over 24v

[tmc2208 extruder]
uart_pin: P1.8
microsteps: 4
run_current: 0.500
hold_current: 0.300
stealthchop_threshold: 0

# [tmc5160 extruder]
# cs_pin: P1.8
# #   The pin corresponding to the TMC5160 chip select line. This pin
# #   will be set to low at the start of SPI messages and raised to high
# #   after the message completes. This parameter must be provided.
# #spi_bus:
# #spi_speed:
# #spi_software_sclk_pin:
# #spi_software_mosi_pin:
# #spi_software_miso_pin:
# #   These optional parameters allow one to customize the SPI settings
# #   used to communicate with the chip.
# microsteps: 64
# #   The number of microsteps to configure the driver to use. Valid
# #   values are 1, 2, 4, 8, 16, 32, 64, 128, 256. This parameter must
# #   be provided.
# #interpolate: True
# #   If true, enable step interpolation (the driver will internally
# #   step at a rate of 256 micro-steps). The default is True.
# run_current: 0.650
# #   The amount of current (in amps) to configure the driver to use
# #   during stepper movement. This parameter must be provided.
# hold_current: 0.450
# #   The amount of current (in amps) to configure the driver to use
# #   when the stepper is not moving. The default is to use the same
# #   value as run_current.
# #sense_resistor: 0.075
# #   The resistance (in ohms) of the motor sense resistor. The default
# #   is 0.075 ohms.
# stealthchop_threshold: 30
# #   The velocity (in mm/s) to set the "stealthChop" threshold to. When
# #   set, "stealthChop" mode will be enabled if the stepper motor
# #   velocity is below this value. The default is 0, which disables
# #   "stealthChop" mode. Try to reexperience this with tmc5160.
# #   Values can be much higher than other tmcs.
# #driver_IHOLDDELAY: 6
# #driver_TPOWERDOWN: 10
# #driver_TBL: 2
# #driver_TOFF: 3
# #driver_HEND: 2
# #driver_HSTRT: 5
# #driver_FD3: 0
# #driver_TPFD: 4
# #driver_CHM: 0
# #driver_VHIGHFS: 0
# #driver_VHIGHCHM: 0
# #driver_DISS2G: 0
# #driver_DISS2VS: 0
# #driver_PWM_AUTOSCALE: True
# #driver_PWM_AUTOGRAD: True
# #driver_PWM_FREQ: 1
# #driver_FREEWHEEL: 0
# #driver_PWM_GRAD: 0
# #driver_PWM_OFS: 30
# #driver_PWM_REG: 4
# #driver_PWM_LIM: 12
# #driver_SGT: 0
# #driver_SEMIN: 0
# #driver_SEUP: 0
# #driver_SEMAX: 0
# #driver_SEDN: 0
# #driver_SEIMIN: 0
# #driver_SFILT: 0
# #   Set the given register during the configuration of the TMC5160
# #   chip. This may be used to set custom motor parameters. The
# #   defaults for each parameter are next to the parameter name in the
# #   above list.
# #diag1_pin:
# #   The micro-controller pin attached to the DIAG1 line of the TMC5160
# #   chip. Setting this creates a "tmc5160_stepper_x:virtual_endstop"
# #   virtual pin which may be used as the stepper's endstop_pin. Doing
# #   this enables "sensorless homing". (Be sure to also set driver_SGT
# #   to an appropriate sensitivity value.) The default is to not enable
# #   sensorless homing. See docs/Sensorless_Homing.md for details on how
# #   to configure this.
