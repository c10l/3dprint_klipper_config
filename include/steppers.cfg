[stepper_x]
step_pin: PE9
dir_pin: PF1
enable_pin: !PF2
step_distance: 0.012375
endstop_pin: PB10
position_endstop: -3
position_min: -3
position_max: 300
homing_speed: 60

[stepper_y]
step_pin: PE11
dir_pin: !PE8
enable_pin: !PD7
step_distance: 0.012375
endstop_pin: PE12
position_min: 0
position_endstop: 0
position_max: 223
homing_speed: 60

[stepper_z]
step_pin: PE13
dir_pin: !PC2
enable_pin: !PC0
step_distance: 0.0025
endstop_pin: probe:z_virtual_endstop
position_min: -5.000
position_endstop: 0
position_max: 300
homing_speed: 7
second_homing_speed: 7

[stepper_z1]
step_pin: PD15
dir_pin: !PE7
enable_pin: !PA3
step_distance: 0.0025
#endstop_pin: probe1:z_virtual_endstop
position_min: -5.000
position_endstop: 0
position_max: 290.1
homing_speed: 7
second_homing_speed: 7

[z_tilt]
z_positions:
  25,25
  275,25
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
points:
  25,25
  275,25
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#retries: 0
#   Number of times to retry if the probed points aren't within tolerance
#retry_tolerance: 0
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.
